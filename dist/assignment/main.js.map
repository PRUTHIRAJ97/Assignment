{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/interceptor/auth/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;IAGvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,UAAK,GAAG,YAAY,CAAC;IAEiB,CAAC;IAEvC,QAAQ;QACN,IAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,wBAAwB,EAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAC1C;aAAI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAEjC;IACH,CAAC;;wEAZU,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;6FDQlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACA;AACmB;AACT;AACa;;AAsB/D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBATT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,kFAAe;YACzB,KAAK,EAAE,IAAI;SACZ;KACF,YAbQ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,4DAAY;YACZ,kEAAmB;SACpB;mIAUU,SAAS,mBAlBlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,4DAAY;QACZ,kEAAmB;6FAWV,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,4DAAY;oBACZ,kEAAmB;iBACpB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,kFAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;;;;;;ICgB/D,2EAGG;IAAA,4EAAiB;IAAA,4DACnB;;;IAED,2EACG;IAAA,wFAA6B;IAAA,4DAC/B;;;IATH,sEACE;IAAA,oHAGG;IAGH,oHACG;IAEL,4DAAM;;;IARF,0DAA+C;IAA/C,6JAA+C;IAK3C,0DAA6B;IAA7B,kIAA6B;;;IAarC,sEAOE;IAAA,2EAA0B;IAAA,gFAAqB;IAAA,4DAAO;IACxD,4DAAM;;ADnCf,MAAM,cAAc;IAOzB,YAAoB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QALnE,kBAAa,GAAY,KAAK,CAAC;QAC/B,YAAO,GAAG,gBAAgB,CAAC;QAC3B,SAAI,GAAI,MAAM;QAIZ,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,iEAAiE;QACjE,+CAA+C;QAC/C,IAAI;IACN,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC;YACxB,OAAO;SACR;QAED,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;YAC/C,IAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,wBAAwB,CAAC;gBACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;aAC1C;iBAAI;gBACH,IAAI,CAAC,OAAO,GAAG,uBAAuB;gBACtC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;SACF;aAAI;YACH,IAAI,CAAC,OAAO,GAAG,oBAAoB;YACnC,UAAU,CAAC,GAAG,EAAE;gBAEd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;IAEH,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IACF,IAAI,QAAQ;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;;4EArDU,cAAc;8FAAd,cAAc;QCT3B,6EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAiB;QAAA,kEAAO;QAAA,4DAAK;QAC7B,0EACE;QAD4B,0IAAY,WAAO,IAAC;QAChD,yEACE;QAAA,4EAA6C;QAAA,iEAAK;QAAA,4DAAQ;QAC1D,wEAMA;QAAA,6GACE;QAUJ,4DAAM;QACN,0EACE;QAAA,6EAAgD;QAAA,oEAAQ;QAAA,4DAAQ;QAChE,wEAMA;QAAA,6GAOE;QAEJ,4DAAM;QACN,8EACE;QAAA,mEACF;QAAA,4DAAS;QACT,4EAA0B;QAAA,wDAAW;QAAA,4DAAO;QAC9C,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;;QAjDQ,0DAAuB;QAAvB,oFAAuB;QASpB,0DAAuD;QAAvD,6HAAuD;QAqB1D,0DAIC;QAJD,2KAIC;QAQqB,0DAAW;QAAX,4EAAW;;6FDxCtC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAQoB;AACnB;;;AAIrC,MAAM,eAAe;IAE1B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QADlC,uBAAkB,GAA4B,IAAI,oDAAe,CAAM,IAAI,CAAC,CAAC;IACxC,CAAC;IAEtC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,WAAW,GAAQ,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,CACxE,iEAAU,CAAC,CAAC,GAAsB,EAAE,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAI;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;aAC3C;YACD,OAAO,uDAAU,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,OAAyB,EAAE,KAAU;QACxD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;SAC3C;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;;8EAzBU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACU;;;AAEjE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6EAAc,EAAE;IAC5C;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CACjB,iLAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KACpE;CACF,CAAC;AAKK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'assignment';\n\n  constructor(private router: Router,) {}\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token') == \"logged In successfully\"){\n      this.router.navigate(['user/dashboard']);\n    }else{\n      this.router.navigate(['login']);\n\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptor/auth/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  formsubmitted: boolean = false;\n  emailId = \"info@gmail.com\";\n  pass  = \"1234\"\n  message: string;\n\n  constructor(private formBuilder: FormBuilder,private router: Router,) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-z]{2,4}$'),\n      ]),\n      password: new FormControl('', Validators.required),\n    })\n  }\n  ngOnInit(): void {\n    // if(localStorage.getItem('token') == \"logged In successfully\"){\n    //   this.router.navigate(['login/dashboard']);\n    // }\n  }\n\n  login(){\n    this.formsubmitted = true;\n    if(this.loginForm.invalid){\n      return;\n    }\n\n    if(this.emailId == this.loginForm.value['email']){\n      if(this.pass == this.loginForm.value['password']){\n        localStorage.setItem('token', 'logged In successfully')\n        this.router.navigate(['user/dashboard']);\n      }else{\n        this.message = \"Password Is incorrect\"\n        setTimeout(() => {\n          this.message = \"\";\n        }, 2000);\n      }\n    }else{\n      this.message = \"Email Is incorrect\"\n      setTimeout(() => {\n\n        this.message = \"\";\n      }, 2000);\n    }\n\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n get password() {\n    return this.loginForm.get('password');\n  }\n\n}\n","<section class=\"vh-100\" style=\"background-color: #50a9fc\">\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card shadow-2-strong\" style=\"border-radius: 1rem\">\n          <div class=\"card-body p-5\">\n            <h3 class=\"mb-5\">Sign in</h3>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n              <div class=\"form-outline mb-4 text-left\">\n                <label class=\"form-label\" for=\"typeEmailX-2\">Email</label>\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  id=\"typeEmailX-2\"\n                  class=\"form-control form-control-lg\"\n                />\n                <div *ngIf=\"email.invalid || email.touched || formsubmitted\">\n                  <span\n                    *ngIf=\"email.errors?.required && formsubmitted\"\n                    class=\"text-danger\"\n                    >Email is required</span\n                  >\n                  <!--question mark(?) is a safe navigation operator-->\n                  <span *ngIf=\"email.errors?.pattern\" class=\"text-danger\"\n                    >Please Enter a valid email Id</span\n                  >\n                </div>\n              </div>\n              <div class=\"form-outline mb-4 text-left\">\n                <label class=\"form-label\" for=\"typePasswordX-2\">Password</label>\n                <input\n                  type=\"password\"\n                  formControlName=\"password\"\n                  id=\"typePasswordX-2\"\n                  class=\"form-control form-control-lg\"\n                />\n                <div\n                  *ngIf=\"\n                    password &&\n                    password.invalid &&\n                    (password.dirty || password.touched || formsubmitted)\n                  \"\n                >\n                  <span class=\"text-danger\">Password is Required.</span>\n                </div>\n              </div>\n              <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\n                Login\n              </button>\n              <span class=\"text-danger\">{{message}}</span>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  accessTokenSubject: BehaviorSubject<string> = new BehaviorSubject<any>(null);\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let accessToken: any = localStorage.getItem('token')\r\n\r\n    return next.handle(this.addAuthorizationHeader(request, accessToken)).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        console.log(\"=============\")\r\n        if (!localStorage.getItem('token')) {\r\n          this.router.navigate(['login']);\r\n        }else{\r\n          this.router.navigate(['login/dashboard']);\r\n        }\r\n        return throwError(request);\r\n      })\r\n    );\r\n  }\r\n\r\n  addAuthorizationHeader(request: HttpRequest<any>, token: any): HttpRequest<any> {\r\n      if (token) {\r\n        this.router.navigate(['login/dashboard']);\r\n      }\r\n      return request;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './modules/login/login.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'user',\n    loadChildren: () =>\n      import('./modules/login/login.module').then((m) => m.LoginModule),\n  },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}